#!/bin/sh

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.local/bin/" ]; then
  mkdir -p "$HOME/.local/bin"
fi

if [ ! -d "$HOME/.private/" ]; then
  mkdir -p "$HOME/.private/ssh"
  touch "$HOME/.private/ssh/config_private"
  touch "$HOME/.private/zshenv"
  touch "$HOME/.private/gitconfig"
fi

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

update_shell() {
  local shell_path;
  shell_path="$(which zsh)"

  fancy_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
}

case "$SHELL" in
  */zsh)
    if [ "$(which zsh)" != '/usr/local/bin/zsh' ] ; then
      update_shell
    fi
    ;;
  *)
    update_shell
    ;;
esac

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    export PATH="/usr/local/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151
brew bundle --file=- <<EOF
tap "homebrew/services"
tap "universal-ctags/universal-ctags"
tap "caskroom/cask"
tap "caskroom/fonts"

# Unix
brew "universal-ctags", args: ["HEAD"]
brew "git"
brew "openssl"
brew "the_silver_searcher"
brew "neovim"
brew "watchman"
brew "zsh"
brew "fzf"
brew "tig"
brew "wget"
brew "python3"

# Services
brew "heroku"

# Image manipulation
brew "imagemagick"

# Testing
brew "chromedriver"

# Programming language prerequisites and package managers
brew "libyaml" # should come after openssl
brew "coreutils"
brew "yarn"
cask "gpgtools"
brew "go"
brew "rust"

# Databases
brew "postgres", restart_service: :changed

# Applications
cask "1password"
cask "alfred"
cask "divvy"
cask "dropbox"
cask "firefox"
cask "font-input"
cask "font-source-code-pro"
cask "google-chrome"
cask "iterm2"
cask "java"
cask "keepingyouawake"
cask "macdown"
cask "nvalt"
cask "qlcolorcode"
cask "qlmarkdown"
cask "qlstephen"
cask "quicklook-csv"
cask "quicklook-json"
cask "rowanj-gitx"
cask "slack"
cask "spotify"
cask "transmission"
cask "vimr"
cask "visual-studio-code"
cask "vlc"
EOF

fancy_echo "Update heroku binary..."
brew unlink heroku
brew link --force heroku

fancy_echo "Installing oh-my-zsh..."
if [ ! -d "$HOME/.oh-my-zsh" ]; then
  git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
fi

fancy_echo "Setting up dotfiles..."
DOT_COMMAND="$HOME/.cargo/bin/dot"
if [ ! -f $DOT_COMMAND ]; then
  cargo install --git https://github.com/ubnt-intrepid/dot.git
fi
if [ ! -d "$HOME/.dotfiles" ]; then
  $DOT_COMMAND clone jaischeema
  ln -s ~/.private ~/.dotfiles/private
fi
$DOT_COMMAND link

if [ ! -f "$HOME/.local/share/nvim/site/autoload/plug.vim" ]; then
  fancy_echo "Installing vim plugin manager..."
  curl -fLo $HOME/.local/share/nvim/site/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

fancy_echo "Configuring asdf version manager..."
if [ ! -d "$HOME/.asdf" ]; then
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.4.0
fi

install_asdf_plugin() {
  local name="$1"
  local url="$2"

  if ! asdf plugin-list | grep -Fq "$name"; then
    asdf plugin-add "$name" "$url"
  fi
}

# shellcheck disable=SC1090
source "$HOME/.asdf/asdf.sh"
install_asdf_plugin "ruby" "https://github.com/asdf-vm/asdf-ruby.git"
install_asdf_plugin "nodejs" "https://github.com/asdf-vm/asdf-nodejs.git"

install_asdf_language() {
  local language="$1"
  local version
  version="$(asdf list-all "$language" | tail -1)"

  if ! asdf list "$language" | grep -Fq "$version"; then
    asdf install "$language" "$version"
    asdf global "$language" "$version"
  fi
}

RUBY_VERSION="2.4.2"
fancy_echo "Installing ruby $RUBY_VERSION..."
asdf install ruby $RUBY_VERSION
asdf global ruby $RUBY_VERSION
gem update --system
gem_install_or_update "bundler"
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

fancy_echo "Installing latest Node..."
bash "$HOME/.asdf/plugins/nodejs/bin/import-release-team-keyring"
install_asdf_language "nodejs"

if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.laptop.local"
fi
